name: Frontend CI/CD

on:
  push:
    branches:
      - main
    paths:
      - 'frontend/**'
  pull_request:
    branches:
      - main
    paths:
      - 'frontend/**'

jobs:
  test:
    name: Test Frontend
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Run lint
        run: npm run lint

      - name: Run tests, generate coverage and JUnit report
        run: npm run test:junit

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          directory: ./frontend/coverage
          flags: frontend
          fail_ci_if_error: false

      - name: Upload test results to Codecov
        if: ${{ !cancelled() }}
        uses: codecov/test-results-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Run build
        run: npm run build
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

      - name: Check bundle size
        run: |
          BUILD_SIZE=$(du -sb dist | cut -f1)
          GZIP_SIZE=$(find dist -name "*.js" -o -name "*.css" | xargs gzip -c | wc -c)
          echo "Build size: $BUILD_SIZE bytes"
          echo "Gzipped JS/CSS: $GZIP_SIZE bytes"
          # Updated to 115KB (117760 bytes) to account for PWA overhead - Issue #26 final implementation
          # Core app: ~103KB + PWA infrastructure: ~12KB = 115KB total
          if [ "$GZIP_SIZE" -gt 117760 ]; then
            echo "Bundle size exceeds 115KB limit (includes PWA overhead)"
            exit 1
          fi

  deploy-production:
    name: Deploy to Production (Fly.io)
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    concurrency: deploy-frontend-production
    defaults:
      run:
        working-directory: ./frontend
    steps:
      - uses: actions/checkout@v4

      - uses: superfly/flyctl-actions/setup-flyctl@master

      - name: Deploy to Production
        run: flyctl deploy --app frontend-autumn-brook-1037
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

  deploy-preview:
    name: Deploy Preview (Fly.io)
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'pull_request'
    concurrency: 
      group: deploy-frontend-preview-${{ github.event.pull_request.number }}
      cancel-in-progress: true
    defaults:
      run:
        working-directory: ./frontend
    steps:
      - uses: actions/checkout@v4

      - uses: superfly/flyctl-actions/setup-flyctl@master

      - name: Generate preview app name
        id: preview-app
        run: |
          PR_NUMBER=${{ github.event.pull_request.number }}
          APP_NAME="frontend-pr-${PR_NUMBER}-autumn-brook-1037"
          echo "app-name=${APP_NAME}" >> $GITHUB_OUTPUT
          echo "Preview app name: ${APP_NAME}"

      - name: Deploy Preview
        run: |
          APP_NAME="${{ steps.preview-app.outputs.app-name }}"
          
          # Create app if it doesn't exist
          if ! flyctl apps list | grep -q "${APP_NAME}"; then
            echo "Creating new preview app: ${APP_NAME}"
            flyctl apps create "${APP_NAME}" --org personal
          fi
          
          # Deploy to preview app
          flyctl deploy --app "${APP_NAME}"
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

      - name: Comment PR with preview URL
        uses: actions/github-script@v7
        with:
          script: |
            const appName = "${{ steps.preview-app.outputs.app-name }}";
            const previewUrl = `https://${appName}.fly.dev`;
            const prNumber = context.issue.number;
            
            // Find existing preview comment
            const comments = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
            });
            
            const previewComment = comments.data.find(comment => 
              comment.body.includes('ðŸš€ Preview Deployment')
            );
            
            const commentBody = `ðŸš€ **Preview Deployment**
            
            Your changes have been deployed to a preview environment:
            
            **ðŸ”— Preview URL:** ${previewUrl}
            
            This preview will be updated automatically on every commit to this PR.
            
            ---
            *Deployed from commit: ${context.sha.substring(0, 7)}*`;
            
            if (previewComment) {
              // Update existing comment
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: previewComment.id,
                body: commentBody
              });
            } else {
              // Create new comment
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: prNumber,
                body: commentBody
              });
            }

  cleanup-preview:
    name: Cleanup Preview
    runs-on: ubuntu-latest
    if: github.event.action == 'closed'
    defaults:
      run:
        working-directory: ./frontend
    steps:
      - uses: actions/checkout@v4

      - uses: superfly/flyctl-actions/setup-flyctl@master

      - name: Delete preview app
        run: |
          PR_NUMBER=${{ github.event.pull_request.number }}
          APP_NAME="frontend-pr-${PR_NUMBER}-autumn-brook-1037"
          
          if flyctl apps list | grep -q "${APP_NAME}"; then
            echo "Deleting preview app: ${APP_NAME}"
            flyctl apps destroy "${APP_NAME}" --yes
          else
            echo "Preview app ${APP_NAME} not found, skipping deletion"
          fi
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

      - name: Comment PR with cleanup notification
        uses: actions/github-script@v7
        with:
          script: |
            const prNumber = context.issue.number;
            
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
              body: "ðŸ§¹ **Preview Cleanup**\n\nPreview deployment has been cleaned up as this PR was closed."
            });
